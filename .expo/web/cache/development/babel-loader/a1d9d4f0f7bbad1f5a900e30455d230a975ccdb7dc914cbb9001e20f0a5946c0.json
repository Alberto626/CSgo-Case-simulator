{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Home = function Home(props) {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    PhoenixGuns = _useState2[0],\n    setPhoenixGuns = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    notFinished = _useState4[0],\n    setNotFinished = _useState4[1];\n  useEffect(function () {\n    var searchGuns = function () {\n      var _ref = _asyncToGenerator(function* () {\n        var search = yield fetch(\"http://csgobackpack.net/api/GetItemsList/v2/?prettyprint=true\").then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          return data.items_list;\n        });\n        var guns = keys();\n        guns.forEach(function (element) {\n          PhoenixGuns.push(search[element]);\n        });\n        setNotFinished(false);\n      });\n      return function searchGuns() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    searchGuns();\n  }, []);\n  return _jsxs(SafeAreaView, {\n    style: {\n      alignItems: \"center\",\n      backgroundColor: 'white'\n    },\n    children: [_jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return props.navigation.navigate(\"Display Weapons\", {\n          guns: weaponsDisplayReturn(PhoenixGuns)\n        });\n      },\n      disabled: notFinished,\n      children: _jsx(Image, {\n        source: {\n          uri: 'https://steamcommunity-a.akamaihd.net/economy/image/-9a81dlWLwJ2UUGcVs_nsVtzdOEdtWwKGZZLQHTxDZ7I56KU0Zwwo4NUX4oFJZEHLbXU5A1PIYQNqhpOSV-fRPasw8rsUFJ5KBFZv668FFUuh6qZJmlD7tiyl4OIlaGhYuLTzjhVupJ12urH89ii3lHlqEdoMDr2I5jVLFFSv_J2Rg/256fx256f'\n        },\n        style: style.caseImage\n      })\n    }), _jsx(Button, {\n      disabled: notFinished,\n      onPress: function onPress() {\n        return props.navigation.navigate(\"Random Gun\", {\n          gun: randomizer(PhoenixGuns)\n        });\n      },\n      title: \"Open Case\"\n    })]\n  });\n};\nvar randomizer = function randomizer(guns) {\n  var chanceStatTrak = Math.random() * 100 + 1;\n  var gunRarityChance = Math.random() * 100 + 1;\n  var gunRarity = \"\";\n  var isStatTrack = false;\n  var listOfWeapons = [];\n  if (gunRarityChance < 79.92) {\n    gunRarity = 'Mil-Spec Grade';\n  } else if (gunRarityChance < 95.9) {\n    gunRarity = 'Restricted';\n  } else if (gunRarityChance < 99.1) {\n    gunRarity = 'Classified';\n  } else {\n    gunRarity = 'Covert';\n  }\n  if (chanceStatTrak < 10) {\n    isStatTrack = true;\n  }\n  guns.forEach(function (element) {\n    if (element.rarity === gunRarity && isStatTrack === element.name.includes('StatTrak')) {\n      listOfWeapons.push(element);\n    }\n  });\n  var randomGun = Math.floor(Math.random() * listOfWeapons.length);\n  return listOfWeapons[randomGun];\n};\nvar weaponsDisplayReturn = function weaponsDisplayReturn(guns) {\n  var index = [0, 8, 22, 32, 36, 44, 51, 76, 81, 90, 61, 93, 99, 114, 118];\n  var gunsDisplay = [];\n  index.forEach(function (element) {\n    gunsDisplay.push(guns[element]);\n  });\n  return gunsDisplay;\n};\nvar style = StyleSheet.create({\n  caseImage: {\n    width: 225,\n    height: 225\n  }\n});\nvar keys = function keys() {\n  var x = ['MAG-7 | Heaven Guard (Factory New)', 'MAG-7 | Heaven Guard (Field-Tested)', 'MAG-7 | Heaven Guard (Minimal Wear)', 'MAG-7 | Heaven Guard (Well-Worn)', \"StatTrak\\u2122 MAG-7 | Heaven Guard (Factory New)\", \"StatTrak\\u2122 MAG-7 | Heaven Guard (Field-Tested)\", \"StatTrak\\u2122 MAG-7 | Heaven Guard (Minimal Wear)\", \"StatTrak\\u2122 MAG-7 | Heaven Guard (Well-Worn)\", 'Negev | Terrain (Factory New)', 'Negev | Terrain (Field-Tested)', 'Negev | Terrain (Minimal Wear)', 'Negev | Terrain (Well-Worn)', \"StatTrak\\u2122 Negev | Terrain (Factory New)\", \"StatTrak\\u2122 Negev | Terrain (Field-Tested)\", \"StatTrak\\u2122 Negev | Terrain (Minimal Wear)\", \"StatTrak\\u2122 Negev | Terrain (Well-Worn)\", \"StatTrak\\u2122 UMP-45 | Corporal (Battle-Scarred)\", \"StatTrak\\u2122 UMP-45 | Corporal (Factory New)\", \"StatTrak\\u2122 UMP-45 | Corporal (Field-Tested)\", \"StatTrak\\u2122 UMP-45 | Corporal (Minimal Wear)\", \"StatTrak\\u2122 UMP-45 | Corporal (Well-Worn)\", 'UMP-45 | Corporal (Battle-Scarred)', 'UMP-45 | Corporal (Factory New)', 'UMP-45 | Corporal (Field-Tested)', 'UMP-45 | Corporal (Minimal Wear)', 'UMP-45 | Corporal (Well-Worn)', \"StatTrak\\u2122 Tec-9 | Sandstorm (Battle-Scarred)\", \"StatTrak\\u2122 Tec-9 | Sandstorm (Field-Tested)\", \"StatTrak\\u2122 Tec-9 | Sandstorm (Minimal Wear)\", \"StatTrak\\u2122 Tec-9 | Sandstorm (Well-Worn)\", 'Tec-9 | Sandstorm (Battle-Scarred)', 'Tec-9 | Sandstorm (Field-Tested)', 'Tec-9 | Sandstorm (Minimal Wear)', 'Tec-9 | Sandstorm (Well-Worn)', 'FAMAS | Sergeant (Battle-Scarred)', 'FAMAS | Sergeant (Field-Tested)', 'FAMAS | Sergeant (Minimal Wear)', 'FAMAS | Sergeant (Well-Worn)', \"StatTrak\\u2122 FAMAS | Sergeant (Battle-Scarred)\", \"StatTrak\\u2122 FAMAS | Sergeant (Field-Tested)\", \"StatTrak\\u2122 FAMAS | Sergeant (Minimal Wear)\", \"StatTrak\\u2122 FAMAS | Sergeant (Well-Worn)\", 'SG 553 | Pulse (Battle-Scarred)', 'SG 553 | Pulse (Field-Tested)', 'SG 553 | Pulse (Minimal Wear)', 'SG 553 | Pulse (Well-Worn)', \"StatTrak\\u2122 SG 553 | Pulse (Battle-Scarred)\", \"StatTrak\\u2122 SG 553 | Pulse (Field-Tested)\", \"StatTrak\\u2122 SG 553 | Pulse (Minimal Wear)\", \"StatTrak\\u2122 SG 553 | Pulse (Well-Worn)\", 'MAC-10 | Heat (Battle-Scarred)', 'MAC-10 | Heat (Factory New)', 'MAC-10 | Heat (Field-Tested)', 'MAC-10 | Heat (Minimal Wear)', 'MAC-10 | Heat (Well-Worn)', \"StatTrak\\u2122 MAC-10 | Heat (Battle-Scarred)\", \"StatTrak\\u2122 MAC-10 | Heat (Factory New)\", \"StatTrak\\u2122 MAC-10 | Heat (Field-Tested)\", \"StatTrak\\u2122 MAC-10 | Heat (Minimal Wear)\", \"StatTrak\\u2122 MAC-10 | Heat (Well-Worn)\", 'AUG | Chameleon (Battle-Scarred)', 'AUG | Chameleon (Factory New)', 'AUG | Chameleon (Field-Tested)', 'AUG | Chameleon (Minimal Wear)', 'AUG | Chameleon (Well-Worn)', \"StatTrak\\u2122 AUG | Chameleon (Battle-Scarred)\", \"StatTrak\\u2122 AUG | Chameleon (Factory New)\", \"StatTrak\\u2122 AUG | Chameleon (Field-Tested)\", \"StatTrak\\u2122 AUG | Chameleon (Minimal Wear)\", \"StatTrak\\u2122 AUG | Chameleon (Well-Worn)\", \"StatTrak\\u2122 P90 | Trigon (Battle-Scarred)\", \"StatTrak\\u2122 P90 | Trigon (Field-Tested)\", \"StatTrak\\u2122 P90 | Trigon (Minimal Wear)\", \"StatTrak\\u2122 P90 | Trigon (Well-Worn)\", 'P90 | Trigon (Battle-Scarred)', 'P90 | Trigon (Field-Tested)', 'P90 | Trigon (Minimal Wear)', 'P90 | Trigon (Well-Worn)', \"StatTrak\\u2122 Nova | Antique (Factory New)\", \"StatTrak\\u2122 Nova | Antique (Field-Tested)\", \"StatTrak\\u2122 Nova | Antique (Minimal Wear)\", 'Nova | Antique (Factory New)', 'Nova | Antique (Field-Tested)', 'Nova | Antique (Minimal Wear)', \"StatTrak\\u2122 AK-47 | Redline (Battle-Scarred)\", \"StatTrak\\u2122 AK-47 | Redline (Field-Tested)\", \"StatTrak\\u2122 AK-47 | Redline (Minimal Wear)\", \"StatTrak\\u2122 AK-47 | Redline (Well-Worn)\", 'AK-47 | Redline (Battle-Scarred)', 'AK-47 | Redline (Field-Tested)', 'AK-47 | Redline (Minimal Wear)', 'AK-47 | Redline (Well-Worn)', 'AWP | Asiimov (Battle-Scarred)', 'AWP | Asiimov (Field-Tested)', 'AWP | Asiimov (Well-Worn)', \"StatTrak\\u2122 AWP | Asiimov (Battle-Scarred)\", \"StatTrak\\u2122 AWP | Asiimov (Field-Tested)\", \"StatTrak\\u2122 AWP | Asiimov (Well-Worn)\", \"\\u2605 Bayonet | Ultraviolet (Battle-Scarred)\", \"\\u2605 Bayonet | Ultraviolet (Factory New)\", \"\\u2605 Bayonet | Ultraviolet (Field-Tested)\", \"\\u2605 Bayonet | Ultraviolet (Minimal Wear)\", \"\\u2605 Bayonet | Ultraviolet (Well-Worn)\", \"\\u2605 StatTrak\\u2122 Bayonet | Ultraviolet (Battle-Scarred)\", \"\\u2605 StatTrak\\u2122 Bayonet | Ultraviolet (Factory New)\", \"\\u2605 StatTrak\\u2122 Bayonet | Ultraviolet (Field-Tested)\", \"\\u2605 StatTrak\\u2122 Bayonet | Ultraviolet (Minimal Wear)\", \"\\u2605 StatTrak\\u2122 Bayonet | Ultraviolet (Well-Worn)\", \"\\u2605 StatTrak\\u2122 Bayonet | Night (Battle-Scarred)\", \"\\u2605 StatTrak\\u2122 Bayonet | Night (Factory New)\", \"\\u2605 StatTrak\\u2122 Bayonet | Night (Field-Tested)\", \"\\u2605 StatTrak\\u2122 Bayonet | Night (Minimal Wear)\", \"\\u2605 StatTrak\\u2122 Bayonet | Night (Well-Worn)\", \"\\u2605 Bayonet | Night (Battle-Scarred)\", \"\\u2605 Bayonet | Night (Factory New)\", \"\\u2605 Bayonet | Night (Field-Tested)\", \"\\u2605 Bayonet | Night (Minimal Wear)\", \"\\u2605 Bayonet | Night (Well-Worn)\", \"\\u2605 Bayonet | Tiger Tooth (Factory New)\", \"\\u2605 Bayonet | Tiger Tooth (Minimal Wear)\", \"\\u2605 StatTrak\\u2122 Bayonet | Tiger Tooth (Factory New)\", \"\\u2605 StatTrak\\u2122 Bayonet | Tiger Tooth (Minimal Wear)\"];\n  return x;\n};\nexport default Home;","map":{"version":3,"names":["React","useState","useEffect","SafeAreaView","TouchableOpacity","Image","Button","StyleSheet","jsx","_jsx","jsxs","_jsxs","Home","props","_useState","_useState2","_slicedToArray","PhoenixGuns","setPhoenixGuns","_useState3","_useState4","notFinished","setNotFinished","searchGuns","_ref","_asyncToGenerator","search","fetch","then","response","json","data","items_list","guns","keys","forEach","element","push","apply","arguments","style","alignItems","backgroundColor","children","onPress","navigation","navigate","weaponsDisplayReturn","disabled","source","uri","caseImage","gun","randomizer","title","chanceStatTrak","Math","random","gunRarityChance","gunRarity","isStatTrack","listOfWeapons","rarity","name","includes","randomGun","floor","length","index","gunsDisplay","create","width","height","x"],"sources":["C:/Users/torta/OneDrive/Desktop/CSgo-Case-simulator/Screens/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {SafeAreaView, TouchableOpacity ,Image, Button, StyleSheet} from 'react-native';\r\nconst Home = props => {\r\n    const [PhoenixGuns, setPhoenixGuns] = useState([]); // list of guns in Phoenix Case\r\n    const [notFinished, setNotFinished] = useState(true); // this is to ensure that the api call is finished before opening case\r\n    useEffect(() => {\r\n        const searchGuns = async() => {\r\n             let search = await fetch(`http://csgobackpack.net/api/GetItemsList/v2/?prettyprint=true`)\r\n            .then(response => response.json())\r\n            .then(data => data.items_list)\r\n            let guns = keys() // all the keys for the guns\r\n            guns.forEach(element => {\r\n                PhoenixGuns.push(search[element])\r\n            });\r\n            setNotFinished(false);\r\n        }\r\n        searchGuns()\r\n    },[]) // only run ONCE\r\n    return(\r\n        <SafeAreaView \r\n            style = {{alignItems: `center`, backgroundColor: 'white'}}>\r\n            <TouchableOpacity // when the image is clicked display possible weapons\r\n                onPress = {() => props.navigation.navigate(\"Display Weapons\", {guns: weaponsDisplayReturn(PhoenixGuns)})} // go to Display Weapons and transport over the weapons to display\r\n                disabled = {notFinished}>\r\n                <Image\r\n                    source = {{\r\n                        uri: 'https://steamcommunity-a.akamaihd.net/economy/image/-9a81dlWLwJ2UUGcVs_nsVtzdOEdtWwKGZZLQHTxDZ7I56KU0Zwwo4NUX4oFJZEHLbXU5A1PIYQNqhpOSV-fRPasw8rsUFJ5KBFZv668FFUuh6qZJmlD7tiyl4OIlaGhYuLTzjhVupJ12urH89ii3lHlqEdoMDr2I5jVLFFSv_J2Rg/256fx256f'\r\n                    }}\r\n                    style = {style.caseImage}\r\n                />\r\n             </TouchableOpacity>\r\n            <Button\r\n                disabled = {notFinished} // to prevent the button from being pressed before useEffect is finished\r\n                onPress = {() => props.navigation.navigate(\"Random Gun\", {gun: randomizer(PhoenixGuns)})}\r\n                title = 'Open Case'\r\n\r\n            />\r\n        </SafeAreaView>\r\n    )\r\n}\r\nconst randomizer = (guns) => {\r\n    let chanceStatTrak = (Math.random() * 100) + 1 // 1 to 100 if less than 10, is statTrak\r\n    let gunRarityChance = (Math.random() * 100) + 1\r\n    let gunRarity = \"\"\r\n    let isStatTrack = false\r\n    let listOfWeapons = []\r\n    if(gunRarityChance < 79.92) { // 79.92\r\n        gunRarity = 'Mil-Spec Grade'\r\n    }\r\n    else if (gunRarityChance < 95.9) { // 15.98\r\n        gunRarity = 'Restricted'\r\n    }\r\n    else if(gunRarityChance < 99.1) { // 3.2\r\n        gunRarity = 'Classified'\r\n    }\r\n    else {\r\n        gunRarity = 'Covert'\r\n    }\r\n    if(chanceStatTrak < 10) {\r\n        isStatTrack = true\r\n    }\r\n    guns.forEach(element => {\r\n        if(element.rarity === gunRarity && isStatTrack === element.name.includes('StatTrak')) { // if the rarity matches the name and isStatTracked\r\n            listOfWeapons.push(element)\r\n        }\r\n    });\r\n    let randomGun = Math.floor(Math.random() * listOfWeapons.length)\r\n    return listOfWeapons[randomGun]\r\n\r\n\r\n}\r\nconst weaponsDisplayReturn = (guns) => {\r\n    const index = [0,8,22,32,36,44,51,76,81,90,61,93,99,114,118] // all the indexs of guns list for display, 61 is in a odd place because of the rarity\r\n    let gunsDisplay = []; // this will contain the guns to display when clicking the image of the case \r\n    index.forEach(element => {\r\n        gunsDisplay.push(guns[element])\r\n    });\r\n    return gunsDisplay\r\n}\r\nconst style = StyleSheet.create({\r\n    caseImage: {\r\n        width: 225,\r\n        height: 225\r\n    }\r\n})\r\nconst keys = () => { // this was made because importing a text file doesnt work, libraries caused many problems\r\nlet x = ['MAG-7 | Heaven Guard (Factory New)', // 0\r\n    'MAG-7 | Heaven Guard (Field-Tested)',\r\n    'MAG-7 | Heaven Guard (Minimal Wear)',\r\n    'MAG-7 | Heaven Guard (Well-Worn)',\r\n    'StatTrak\\u2122 MAG-7 | Heaven Guard (Factory New)',\r\n    'StatTrak\\u2122 MAG-7 | Heaven Guard (Field-Tested)',\r\n    'StatTrak\\u2122 MAG-7 | Heaven Guard (Minimal Wear)',\r\n    'StatTrak\\u2122 MAG-7 | Heaven Guard (Well-Worn)',\r\n    'Negev | Terrain (Factory New)', // 8\r\n    'Negev | Terrain (Field-Tested)',\r\n    'Negev | Terrain (Minimal Wear)',\r\n    'Negev | Terrain (Well-Worn)',\r\n    'StatTrak\\u2122 Negev | Terrain (Factory New)',\r\n    'StatTrak\\u2122 Negev | Terrain (Field-Tested)',\r\n    'StatTrak\\u2122 Negev | Terrain (Minimal Wear)',\r\n    'StatTrak\\u2122 Negev | Terrain (Well-Worn)',\r\n    'StatTrak\\u2122 UMP-45 | Corporal (Battle-Scarred)',\r\n    'StatTrak\\u2122 UMP-45 | Corporal (Factory New)',\r\n    'StatTrak\\u2122 UMP-45 | Corporal (Field-Tested)',\r\n    'StatTrak\\u2122 UMP-45 | Corporal (Minimal Wear)',\r\n    'StatTrak\\u2122 UMP-45 | Corporal (Well-Worn)',\r\n    'UMP-45 | Corporal (Battle-Scarred)',\r\n    'UMP-45 | Corporal (Factory New)', // 22\r\n    'UMP-45 | Corporal (Field-Tested)',\r\n    'UMP-45 | Corporal (Minimal Wear)',\r\n    'UMP-45 | Corporal (Well-Worn)',\r\n    'StatTrak\\u2122 Tec-9 | Sandstorm (Battle-Scarred)',\r\n    'StatTrak\\u2122 Tec-9 | Sandstorm (Field-Tested)',\r\n    'StatTrak\\u2122 Tec-9 | Sandstorm (Minimal Wear)',\r\n    'StatTrak\\u2122 Tec-9 | Sandstorm (Well-Worn)',\r\n    'Tec-9 | Sandstorm (Battle-Scarred)',\r\n    'Tec-9 | Sandstorm (Field-Tested)',\r\n    'Tec-9 | Sandstorm (Minimal Wear)', // 32\r\n    'Tec-9 | Sandstorm (Well-Worn)',\r\n    'FAMAS | Sergeant (Battle-Scarred)',\r\n    'FAMAS | Sergeant (Field-Tested)',\r\n    'FAMAS | Sergeant (Minimal Wear)', // 36\r\n    'FAMAS | Sergeant (Well-Worn)',\r\n    'StatTrak\\u2122 FAMAS | Sergeant (Battle-Scarred)',\r\n    'StatTrak\\u2122 FAMAS | Sergeant (Field-Tested)',\r\n    'StatTrak\\u2122 FAMAS | Sergeant (Minimal Wear)',\r\n    'StatTrak\\u2122 FAMAS | Sergeant (Well-Worn)',\r\n    'SG 553 | Pulse (Battle-Scarred)',\r\n    'SG 553 | Pulse (Field-Tested)',\r\n    'SG 553 | Pulse (Minimal Wear)', // 44\r\n    'SG 553 | Pulse (Well-Worn)',\r\n    'StatTrak\\u2122 SG 553 | Pulse (Battle-Scarred)',\r\n    'StatTrak\\u2122 SG 553 | Pulse (Field-Tested)',\r\n    'StatTrak\\u2122 SG 553 | Pulse (Minimal Wear)',\r\n    'StatTrak\\u2122 SG 553 | Pulse (Well-Worn)',\r\n    'MAC-10 | Heat (Battle-Scarred)',\r\n    'MAC-10 | Heat (Factory New)', // 51\r\n    'MAC-10 | Heat (Field-Tested)',\r\n    'MAC-10 | Heat (Minimal Wear)',\r\n    'MAC-10 | Heat (Well-Worn)',\r\n    'StatTrak\\u2122 MAC-10 | Heat (Battle-Scarred)',\r\n    'StatTrak\\u2122 MAC-10 | Heat (Factory New)',\r\n    'StatTrak\\u2122 MAC-10 | Heat (Field-Tested)',\r\n    'StatTrak\\u2122 MAC-10 | Heat (Minimal Wear)',\r\n    'StatTrak\\u2122 MAC-10 | Heat (Well-Worn)',\r\n    'AUG | Chameleon (Battle-Scarred)',\r\n    'AUG | Chameleon (Factory New)', // 61\r\n    'AUG | Chameleon (Field-Tested)',\r\n    'AUG | Chameleon (Minimal Wear)',\r\n    'AUG | Chameleon (Well-Worn)',\r\n    'StatTrak\\u2122 AUG | Chameleon (Battle-Scarred)',\r\n    'StatTrak\\u2122 AUG | Chameleon (Factory New)',\r\n    'StatTrak\\u2122 AUG | Chameleon (Field-Tested)',\r\n    'StatTrak\\u2122 AUG | Chameleon (Minimal Wear)',\r\n    'StatTrak\\u2122 AUG | Chameleon (Well-Worn)',\r\n    'StatTrak\\u2122 P90 | Trigon (Battle-Scarred)',\r\n    'StatTrak\\u2122 P90 | Trigon (Field-Tested)',\r\n    'StatTrak\\u2122 P90 | Trigon (Minimal Wear)',\r\n    'StatTrak\\u2122 P90 | Trigon (Well-Worn)',\r\n    'P90 | Trigon (Battle-Scarred)',\r\n    'P90 | Trigon (Field-Tested)',\r\n    'P90 | Trigon (Minimal Wear)', // 76\r\n    'P90 | Trigon (Well-Worn)',\r\n    'StatTrak\\u2122 Nova | Antique (Factory New)',\r\n    'StatTrak\\u2122 Nova | Antique (Field-Tested)',\r\n    'StatTrak\\u2122 Nova | Antique (Minimal Wear)',\r\n    'Nova | Antique (Factory New)', // 81\r\n    'Nova | Antique (Field-Tested)',\r\n    'Nova | Antique (Minimal Wear)',\r\n    'StatTrak\\u2122 AK-47 | Redline (Battle-Scarred)',\r\n    'StatTrak\\u2122 AK-47 | Redline (Field-Tested)',\r\n    'StatTrak\\u2122 AK-47 | Redline (Minimal Wear)',\r\n    'StatTrak\\u2122 AK-47 | Redline (Well-Worn)',\r\n    'AK-47 | Redline (Battle-Scarred)',\r\n    'AK-47 | Redline (Field-Tested)',\r\n    'AK-47 | Redline (Minimal Wear)', // 90\r\n    'AK-47 | Redline (Well-Worn)',\r\n    'AWP | Asiimov (Battle-Scarred)',\r\n    'AWP | Asiimov (Field-Tested)', // 93\r\n    'AWP | Asiimov (Well-Worn)',\r\n    'StatTrak\\u2122 AWP | Asiimov (Battle-Scarred)',\r\n    'StatTrak\\u2122 AWP | Asiimov (Field-Tested)',\r\n    'StatTrak\\u2122 AWP | Asiimov (Well-Worn)',\r\n    '\\u2605 Bayonet | Ultraviolet (Battle-Scarred)',\r\n    '\\u2605 Bayonet | Ultraviolet (Factory New)',// 99\r\n    '\\u2605 Bayonet | Ultraviolet (Field-Tested)',\r\n    '\\u2605 Bayonet | Ultraviolet (Minimal Wear)',\r\n    '\\u2605 Bayonet | Ultraviolet (Well-Worn)',\r\n    '\\u2605 StatTrak\\u2122 Bayonet | Ultraviolet (Battle-Scarred)',\r\n    '\\u2605 StatTrak\\u2122 Bayonet | Ultraviolet (Factory New)',\r\n    '\\u2605 StatTrak\\u2122 Bayonet | Ultraviolet (Field-Tested)',\r\n    '\\u2605 StatTrak\\u2122 Bayonet | Ultraviolet (Minimal Wear)',\r\n    '\\u2605 StatTrak\\u2122 Bayonet | Ultraviolet (Well-Worn)',\r\n    '\\u2605 StatTrak\\u2122 Bayonet | Night (Battle-Scarred)',\r\n    '\\u2605 StatTrak\\u2122 Bayonet | Night (Factory New)',\r\n    '\\u2605 StatTrak\\u2122 Bayonet | Night (Field-Tested)',\r\n    '\\u2605 StatTrak\\u2122 Bayonet | Night (Minimal Wear)',\r\n    '\\u2605 StatTrak\\u2122 Bayonet | Night (Well-Worn)',\r\n    '\\u2605 Bayonet | Night (Battle-Scarred)',\r\n    '\\u2605 Bayonet | Night (Factory New)', // 114\r\n    '\\u2605 Bayonet | Night (Field-Tested)',\r\n    '\\u2605 Bayonet | Night (Minimal Wear)',\r\n    '\\u2605 Bayonet | Night (Well-Worn)',\r\n    '\\u2605 Bayonet | Tiger Tooth (Factory New)', // 118\r\n    '\\u2605 Bayonet | Tiger Tooth (Minimal Wear)',\r\n    '\\u2605 StatTrak\\u2122 Bayonet | Tiger Tooth (Factory New)',\r\n    '\\u2605 StatTrak\\u2122 Bayonet | Tiger Tooth (Minimal Wear)']\r\n    return x;\r\n}\r\nexport default Home;\r\n//import PhoenixCaseGuns from '../Guns/PhoenixCaseGuns'"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}